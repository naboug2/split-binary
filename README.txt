Description
This project provides a solution to a problem involving binary representation and mathematical manipulation of integers. 
The main function, SplitBinary, processes a given positive integer n and performs operations based on its binary form.
The project also includes a loop to detect duplicate values generated by repeated application of the SplitBinary function.

Key Features
Binary Splitting: The SplitBinary function converts a positive integer n to its binary form and splits it into two parts if 
the binary form has more than one digit.
- If the binary form has L digits, it splits the form into two parts: the first part with the first ceiling(L/2) digits
  (denoted as F) and the second part with the remaining (L-ceiling(L/2)) digits (denoted as S).
- Both parts are then converted back to decimal form, incremented by 1, and multiplied together to produce the output.

Loop to Detect Duplicates: The program initializes a list with the starting value n and iteratively applies the SplitBinary 
function to generate new values. It prints each new value and checks for duplicates to detect loops.
- If a duplicate value is found within 20 iterations, it prints "Duplicate Found!".
- If no duplicates are found after 20 iterations, it prints "20 iterations and no duplicates".

Implementation Details
-Function SplitBinary(n)
--Converts n to its binary form B.
--Splits B into two parts if its length is greater than 1.
--Converts the parts back to decimal, increments each by 1, and returns their product.

-Main Loop
--Prompts the user to enter a starting value n.
--Generates up to 20 values by applying the SplitBinary function iteratively.
--Checks for and reports duplicate values to detect loops.

Usage
To use this project, follow these steps:

1. Run the Program: python main.py
2. Input a Starting Value:
3. Enter a positive integer when prompted.
4. The program will print each value generated by the SplitBinary function and report if a duplicate is found or 
   if 20 iterations are completed without duplicate  